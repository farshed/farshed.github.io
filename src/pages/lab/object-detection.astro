---
import Page from '../../layouts/Page.astro';
---

<script type="module">
  import { pipeline } from 'https://cdn.jsdelivr.net/npm/@xenova/transformers@2.10.1';

  const [status, imgInput, image, detectBtn, imgContainer] = [
    'status',
    'img-input',
    'preview',
    'detect-btn',
    'image-container'
  ].map((id) => document.getElementById(id));
  // const status = document.getElementById('status');
  // const image = document.getElementById('image');
  // const detectButton = document.getElementById('detect-objects');
  // const imageContainer = document.getElementById('image-container');

  imgInput.onchange = (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        image.src = e.target.result;
        detectBtn.disabled = false;
      };
      reader.readAsDataURL(file);
    }
  };

  // Create a new object detection pipeline
  status.textContent = 'Loading model...';
  const detector = await pipeline('object-detection', 'Xenova/yolos-tiny');

  // Enable Object Detection
  detectButton.addEventListener('click', detectAndDrawObjects);
  detectButton.disabled = false;
  status.textContent = 'Ready';

  async function detectAndDrawObjects() {
    // Detect Objects
    status.textContent = 'Detecting...';
    const detectedObjects = await detector(image.src, {
      threshold: 0.95,
      percentage: true
    });

    // status.textContent = 'Drawing...';
    detectedObjects.forEach((obj) => drawObjectBox(obj));
    status.textContent = 'Done!';
  }

  function drawObjectBox(detectedObject) {
    const { label, score, box } = detectedObject;
    const { xmax, xmin, ymax, ymin } = box;

    const color =
      '#' +
      Math.floor(Math.random() * 0xffffff)
        .toString(16)
        .padStart(6, '0');

    const boxElement = document.createElement('div');
    boxElement.className = 'bounding-box';
    Object.assign(boxElement.style, {
      borderColor: color,
      left: 100 * xmin + '%',
      top: 100 * ymin + '%',
      width: 100 * (xmax - xmin) + '%',
      height: 100 * (ymax - ymin) + '%'
    });

    // Draw label
    const labelElement = document.createElement('span');
    labelElement.textContent = `${label}: ${Math.floor(score * 100)}%`;
    labelElement.className = 'bounding-box-label';
    labelElement.style.backgroundColor = color;

    boxElement.appendChild(labelElement);
    imageContainer.appendChild(boxElement);
  }
</script>

<Page title="Object Detection">
  <!-- <p id="status"></p>
  <button id="detect-objects" disabled>Detect Objects</button>
  <div id="image-container">
    <img id="image" src="/road.jpeg" />
  </div> -->

  <div class="image-upload-wrapper">
    <input id="img-input" type="file" accept="image/*" />
    <img id="preview" src="" />
  </div>

  <button id="detect-btn" disabled>Detect</button>
</Page>

<style>
  .image-upload-wrapper {
    text-align: center;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
    width: 300px;
    margin: auto;
  }

  #preview img {
    max-width: 100%;
    height: auto;
    margin-top: 20px;
  }

  .container {
    margin: 40px auto;
    width: max(50vw, 500px);
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  button {
    /* Simple shape */
    border-radius: 0.5rem;
    padding: 0.5rem 1rem;
    margin: 0.5rem;
    background-color: #d4a326;
    color: #fff;
    border: none;
    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
    font-size: 1rem;
    line-height: 1.5;
    text-align: center;
  }

  button:hover {
    background-color: #d5a427;
  }

  #image-container {
    width: 100%;
    margin-top: 20px;
    position: relative;
  }

  #image-container > img {
    width: 100%;
  }

  .bounding-box {
    position: absolute;
    box-sizing: border-box;
    border-width: 1px;
    border-style: solid;
  }

  .bounding-box-label {
    color: white;
    position: absolute;
    font-size: 10px;
    margin-top: -16px;
    margin-left: -2px;
    padding: 1px;
    width: max-content;
  }
</style>
